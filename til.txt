5월 10일
jasonify 사용시 오류가 잘 발생하므로
-@app.route("/review", methods=["GET"])
def commenst_get():
    all_reviw = list(db.fin_Reviews.find({}, {'_id': False}))
    return jsonify({'review':all_review}) 가 아닌
    return jsonify(all_review)  로 사용



function commenst_get() {

            $.ajax({
                type: 'GET',
                url: '/review',
                data : {},
                success: function (response) {
                    let row = response                             <<<<<<< 여기도 let row = response['all_review'] 가 아님
                    for (let i = 0; i < row.length; i++) {
                        let location = row[i]['location']
                        let sopt = row[i]['spot_name']
                        let content = row[i]['content']
                        let file = row[i]['file']

                        console.log(file, location, sopt, content)
                    }

                }
            });
        }


[Chapter 2] 프로그래밍 기초(w2)
항해 99 2week 시작
2week - 프로그래밍 기초 주차
자바스크립트에 알고리즘에 대한 문제들을 몇가지 풀어 봤는데 아직 이해가 안가는 부분이 너무 많다....
기본 문법들을 유튜브, 구글 자료등을 통해 습득이 많이 필요 할것 같다


오늘 푼 문제들 13~20번 보너스 29번
다른 문제들은 구글링을 통해 함수를 찾고 풀 수 있는 문제들이 많았다.
그중 20번에 동일 인물에 관한 중복 값 제거가 쉽지가 않아
복습을 하며 다시 한 번 차근차근 풀어봐야 할거 같다.


오늘 써본것 삼항연산자 
- 그동안 알고리즘 문제 풀면서 다른 풀이들을 봤을때 삼항연산자로
간단하게 푼 문제들을 많이 봤는데 오늘 그것을 사용 해봤다.
생각보다 어렵지 않고 쉽게 사용 할 수 있을꺼 같다.
앞으로 자주 사용해야 할듯.

CS 스터디 발제 
- 오늘 추가로 CS 스터디 그룹을 만들고 시작 했다. 
CS 스터디는 1일1로그 100일완성  IT지식 책을 읽고 서로의 의견?을 기록 하는 그룹이다.
앞으로 책을 꾸준히 읽어야 겠다. 


알고리즘 모의고사
- 첫 시험을 봤는데 시험이라 그런거 약간의 긴장감이 들었다.
시험은 두문제중 한 문제를 푸는것. 그중에 2번 신대륙 발견 문제를 풀었다.
문제는 대충 날짜 구하는 식이다. 그전에 연습 문제에서 비슷한 문제를 풀어서
쉬울거 같아 골랐는데 막상 하려니 잘 풀리지가 않았다.(아직 한참 부족한듯...)

문제 풀이
 2번. 신대륙 발견

예지는 오늘 항해99를 시작했다. 성격이 급한 예지는 항해 1일 차부터 언제 수료를 하게될 지 궁금하다.
항해 1일 차 날짜를 입력하면 98일 이후 항해를 수료하게 되는 날짜를 계산해주는 알고리즘을 만들어보자.

제한 조건
1 ≤ month ≤ 12
1 ≤ day ≤ 31 (2월은 28일로 고정합니다, 즉 윤일은 고려하지 않습니다.)


입출력 예
월      일     출력값
11      27     “3월  5일”
 6      22     “9월 28일”

지정 입력값
월      일     출력값
1       18     ‘4월 26일’

function solution(month, day){
	let result=""
  var toDay = new Date(`2022-${month}-${day}`);
  toDay.setDate(toDay.getDate()+98);
  var month = toDay.getMonth()+1;
  var day = toDay.getDate();

  var tt =(("00"+month.toString()).slice(-2))+"월"+  (("00"+day.toString()).slice(-2))+"일";
	return result = tt;
}
console.log(solution(1,18))

풀이 toDay를 설정한 후 toDay에 98일을 더한 날짜를 출력 하는거

답이 맞는지 모르겠다...

그리고 오늘 처음 Node.js 과제를 하기 시작(실습 과제만 하면 되는줄 알고 있었던 1인...)

그동안 알고리즘 문제만 푸느라 자바스크립트에 대해 잘 몰랐는데 과제를 하면서 좀더 알아가게 됨

마지막으로 내일 발표 할 CS 스터디 Chapt 3 HDD 와 SSD의 차이 자료 준비

끝.




1. node.js 과제 제출
- 호이스팅, 스코프, TDZ 등 javascript에 좀 더 알게 되었다.

https://www.notion.so/Node-js-976d3ca7d7f24de2b35dc8ac5ce27ee3


2. 항해톡
- Rest API, HTTP 두가지 발표하는 걸 들었고
    Rest API와 HTTP에 관해 조금더 알게 되었다.





.sort((a,b) => b-a)

숫자 오름차순 정렬시 그냥 .sort()를 쓰면 
arr = [2, 10, 1, 30]

num = arr.sort(); // [1, 10, 2, 30]
이 된다

그래서 
arr = [2, 10, 1, 30]

num = arr.sort((a,b) => b-a); // [1, 2, 10, 30]

이렇게 써줘야 한다.

.join(x); - join에서 x 값은 합쳐질때 중간중간 x가 들어감
예시)
function solution(n){
	let result=""
    let num = n.toString().split("").reverse(); //[ '3', '5', '2', '8', '1', '7' ]
    console.log(num);
    let x = 0;
    for(let i =0; i <num.length; i++){
        x += parseInt(num[i]);
        console.log(x);
    }
    console.log(num);
	return result = num.join('+')+`=${x}`;   // 3+5+2+8+1+7=26
}
console.log(solution(718253))

오늘 코딩테스트는 망....





[Chapter 3-1] 주특기 입문(w3)

JavaScript는 정적인 문서에서 동적으로 표현 할 수 있도록 만들어짐

팁!
당시에 "Java"라는 언어가 매우 각광받고 있었고 그 인기에 편승하기 위해 지어진
이름이 "JavaScript"입니다.
알고보면 인도와 인도네시아의 관계보다도 훨씬 더! 전혀!! 관계가 없어요!

node.js는 JavaScript가 실핼될 수 있게 도와주는 런타임 플랫폼
npm은 JavaScript에서 사용할 수 있는 패키지(모듈) 관리자

HTTP는 데이터를 주고 받는 양식을 정의한 "통신 규약"중 하나
웹 서버는 인터넷을 통해 HTTP를 이용하여 웹상의 클라이언트의 요청을 응답해주는 통신을 하는 컴퓨터
Express.js는 Node.js로 서버를 빠르고 간편하게 만들 수 있게 도와주는 웹 프레임워크
미들웨어는 웹 서버에서 요청을 받을때 가끔 모든 요청에 대해 공통적인 처리를 하고 싶은 경우가 생길 수 있는데
이때 웹 서버의 요청/응답에 대해 공통적으로 관리
Routing은 클라이언트의 요청 조건(메서드, 주소등)에 대응해 응답하는 방식
Router는 클라이언트의 요청을 쉽게 처리 할 수 있게 도와주는 Express.js 기본 기능중 하나
API는 애플리케이션끼리 연결해주는 매개체이자 약속
REST API는 월드 와이드 웹(WWW)과 같은 분산 하이퍼미디어 시스템을 위한 소프트웨어 아키텍처의 한 형식
그냥 사람이 봐도 쉽게 이해할 수있도록 "자원"을 정의하고 이 "자원"을 중심으로 표현을 구성하는 원칙

API Client란 개발단계에서 우리가 작성한 API의 요청을 확인하거나 테스팅 할 때 도움을 주는 툴
데이터베이스는 단순히 데이터를 잘 저장하고 잘 찾기 위해 만들어진 소프트웨어를 Datavase Management System(DBMS)라 부르고,
DBMS가 설치된 서버 컴퓨터를 데이터베이스 서버(DB 서버)라고 부를 수 있다.
종류는 크게 두가지로 관계형 데이터베이스(RDB), 비관계형 데이터 베이스(NoSQL) 가 있다.
Query String은 URL의 뒤에 ?부터 시작되어 parameter=value 로 key 값과 value 값이 나뉘고 리소스에 대한 표현이 아닌 부가 정보를 전달받음

등등...



새로운 주차 시작
node.js에 본격적으로 시작하는 주 이번 챕터는 3주간 이루어 진다.
한 단계 더 성장하는 계기가 되기를...